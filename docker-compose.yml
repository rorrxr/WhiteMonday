services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - commerce-network
  redis:
    image: redis:7.0
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379" # 로컬 6379 포트를 컨테이너의 6379 포트로 매핑
    volumes:
      - redis-data:/data # Redis 데이터 영속성
    networks:
      - commerce-network

  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - commerce-network

  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8000:8000"
    networks:
      - commerce-network

  user-service:
    image: user-service:latest
    container_name: user-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8081:8080"
    networks:
      - commerce-network

  product-service:
    image: product-service:latest
    container_name: product-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8082:8082"
    networks:
      - commerce-network

  order-service:
    image: order-service:latest
    container_name: order-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8083:8083"
    networks:
      - commerce-network
  wishlist-service:
    build:
      context: ./wishlist-service  # Dockerfile이 있는 디렉토리로 경로 설정
    image: wishlist-service:latest
    container_name: wishlist-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8084:8084"
    networks:
      - commerce-network
  payment-service:
    build:
      context: ./payment-service  # Dockerfile이 있는 디렉토리로 경로 설정
    image: payment-service:latest
    container_name: payment-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8085:8085"
    networks:
      - commerce-network
volumes:
  mysql-data:
  redis-data:


networks:
  commerce-network:
    driver: bridge