services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - commerce-network
  redis:
    image: redis:7.0
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379" # 로컬 6379 포트를 컨테이너의 6379 포트로 매핑
    volumes:
      - redis-data:/data # Redis 데이터 영속성
    networks:
      - commerce-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - commerce-network
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - commerce-network
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - commerce-network

  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8000:8000"
    networks:
      - commerce-network

  common:
    build:
      context: ./                  # 프로젝트 루트
      dockerfile: ./common/Dockerfile
    image: common:latest
    container_name: common
    ports:
      - "8070:8070"
    networks:
      - commerce-network

  user-service:
    image: user-service:latest
    container_name: user-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8081:8080"
    networks:
      - commerce-network

  product-service:
    image: product-service:latest
    container_name: product-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8082:8082"
    networks:
      - commerce-network

  order-service:
    image: order-service:latest
    container_name: order-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8083:8083"
    networks:
      - commerce-network
  wishlist-service:
    image: wishlist-service:latest
    container_name: wishlist-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_SECRET_KEY: ${ENCRYPTION_SECRET_KEY}
    ports:
      - "8084:8084"
    networks:
      - commerce-network
  payment-service:
    image: payment-service:latest
    container_name: payment-service
    depends_on:
      - mysql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8085:8085"
    networks:
      - commerce-network
  prometheus:
    image: prom/prometheus:latest
    container_name: whitemonday-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - commerce-network
    depends_on:
      - product-service
      - order-service
      - payment-service

  # Grafana (대시보드)
  grafana:
    image: grafana/grafana:latest
    container_name: whitemonday-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - commerce-network
    depends_on:
      - prometheus
volumes:
  mysql-data:
  redis-data:
  prometheus_data:
  grafana_data:

networks:
  commerce-network:
    driver: bridge