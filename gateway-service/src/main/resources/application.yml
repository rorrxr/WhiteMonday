server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}

  instance:
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS:10}
    lease-expiration-duration-in-seconds: ${EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS:30}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    non-secure-port-enabled: true
    metadata-map:
      instanceId: ${spring.application.name}:${random.value}

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
          filters:
            - StripPrefix=1

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product-service/**
          filters:
            - StripPrefix=1

        - id: wishlist-service
          uri: lb://wishlist-service
          predicates:
            - Path=/wishlist-service/**
          filters:
            - StripPrefix=1
            - AuthorizationFilter # 필터 추가

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/**
          filters:
            - StripPrefix=1
            - AuthorizationFilter # 필터 추가

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment-service/**
          filters:
            - StripPrefix=1
            - AuthorizationFilter # 필터 추가
    
    # 서킷 브레이커 추가
    resilience4j:
      circuitbreaker:
        configs:
          default:
            failure-rate-threshold: 50
            minimum-number-of-calls: 10
            sliding-window-size: 20
            wait-duration-in-open-state: 30s
            automatic-transition-from-open-to-half-open-enabled: true
            permitted-number-of-calls-in-half-open-state: 5
        instances:
          user-service:
            base-config: default
          product-service:
            base-config: default
            failure-rate-threshold: 60
          order-service:
            base-config: default
            failure-rate-threshold: 40
          payment-service:
            base-config: default
            failure-rate-threshold: 30
          wishlist-service:
            base-config: default

      retry:
        configs:
          default:
            max-attempts: 3
            wait-duration: 1s
            exponential-backoff-multiplier: 2
            retry-exceptions:
              - java.net.ConnectException
              - java.io.IOException
              - java.util.concurrent.TimeoutException
        instances:
          user-service:
            base-config: default
            max-attempts: 2
          product-service:
            base-config: default
            max-attempts: 3
            wait-duration: 500ms
          order-service:
            base-config: default
            max-attempts: 4
          payment-service:
            base-config: default
            max-attempts: 5
            wait-duration: 2s
          wishlist-service:
            base-config: default
            max-attempts: 2

    management:
      endpoints:
        web:
          exposure:
            include: health,circuitbreakers,retries,gateway
      endpoint:
        health:
          show-details: always

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: "Spring Cloud Gateway Global Filter"
            preLogger: true
            postLogger: true


    compatibility-verifier:
      enabled: false

jwt:
  secret-key: ${JWT_SECRET_KEY}

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG