
server:
  port: 8082
spring:
  application:
    name: product-service
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: ${SPRING_DATASOURCE_URL}
  data:
    redis:
      host: localhost
      port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: stock-saga-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        max.poll.records: 1
        enable.auto.commit: false
      enable-auto-commit: false
      ack-mode: manual_immediate

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        max.in.flight.requests.per.connection: 1
        retries: 3
        acks: all

  main:
    web-application-type: servlet
    log-startup-info: true
  cloud:
    compatibility-verifier:
      enabled: false
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5000
    disable-delta: true
    service-url:
      defaultZone: http://localhost:8761/eureka
logging:
  level:
    org.springframework.cloud: DEBUG
jwt:
  secret: ${JWT_SECRET_KEY}
resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 500ms
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - org.springframework.dao.DataAccessException
          - org.springframework.data.redis.RedisConnectionFailureException
          - java.net.ConnectException
          - java.io.IOException
    instances:
      redis-operation:
        base-config: default
        max-attempts: 5
        wait-duration: 200ms
        exponential-backoff-multiplier: 1.5
      database-operation:
        base-config: default
        max-attempts: 3
        wait-duration: 1s
      stock-operation:
        base-config: default
        max-attempts: 4
        wait-duration: 300ms

  circuitbreaker:
    instances:
      redis-operation:
        failure-rate-threshold: 60
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s